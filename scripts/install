#!/bin/bash
app=gogs

# Retrieve arguments
domain=$1
path=$2
admin=$3
password=$4
is_public=$5

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Generate random password
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')


# Initialize database and store mysql password for upgrade
sudo yunohost app initdb $app -p $db_pwd
sudo yunohost app setting $app mysqlpwd -v $db_pwd

# Generate random key
key=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{15\}\).*/\1/p')

# store config in yunohost
sudo yunohost app setting $app adminusername -v $admin
sudo yunohost app setting $app is_public -v $is_public
sudo yunohost app setting $app secret_key -v $key

# Install dependances (use backport repo for wheezy for golang package)
if [[ $(cat /etc/debian_version) = "7."* ]]
then
	sudo apt-get -y install git
	sudo echo "deb http://http.debian.net/debian wheezy-backports main" | sudo tee /etc/apt/sources.list.d/debian-backport-tmp.list
	sudo apt-get update
	sudo apt-get install -y golang=2:1.3.3-1~bpo70+1 golang-go=2:1.3.3-1~bpo70+1 golang-src=2:1.3.3-1~bpo70+1 golang-doc=2:1.3.3-1~bpo70+1 -V
	sudo rm /etc/apt/sources.list.d/debian-backport-tmp.list
	sudo apt-get update
else
	sudo apt-get -y install git golang
fi

# Add users
sudo addgroup gogs --system --quiet
sudo adduser gogs --disabled-login --ingroup gogs --system --quiet --shell /bin/bash

# Build Gogs
base_directory=$PWD
export GOPATH=/opt/gogs_src
tar xzf ../sources/gogs_src.tar.gz
sudo mv gogs_src $GOPATH
cd $GOPATH/src/github.com/gogits/gogs
sudo GOPATH=/opt/gogs_src: go get ./...
sudo GOPATH=/opt/gogs_src: go build
cd $base_directory
sudo ln -s /opt/gogs_src/src/github.com/gogits/gogs /opt/gogs

# repository path
repo_path=/home/yunohost.app/$app
sudo mkdir -p $repo_path
sudo yunohost app setting $app repopath -v $repo_path

# Create a link to static files
sudo mkdir -p /etc/gogs/conf
sudo mkdir -p /home/gogs/data/avatars
sudo mkdir -p /var/log/gogs
sudo rm -rf /opt/gogs/log
sudo rm -rf /opt/gogs/custom
sudo rm -rf /opt/gogs/data
sudo ln -fs /etc/gogs /opt/gogs/custom
sudo ln -fs /home/gogs/data /opt/gogs/data
sudo ln -fs /var/log/gogs /opt/gogs/log

# Configure logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/gogs
sudo service rsyslog restart

# Configure init script
if [[ $(cat /etc/debian_version) = "7."* ]]
then
	sudo cp ../conf/sysvinit/gogs /etc/init.d/
	sudo chmod u+x /etc/init.d/gogs
	sudo update-rc.d gogs defaults
else
	sudo cp ../conf/systemd/gogs.service /etc/systemd/system/
	sudo systemctl daemon-reload
	sudo systemctl enable gogs.service
fi

# Set gogs user for gogs directory
sudo chown gogs:gogs -R  /opt/gogs_src
sudo chown gogs:gogs -R /etc/gogs
sudo chown -hR gogs:gogs $repo_path
sudo chown -R gogs:gogs /var/log/gogs
sudo chown -R gogs:gogs /home/gogs

# Copy and edit app.ini
sudo cp ../conf/app.ini /opt/gogs/custom/conf
sudo sed -i "s@yuno_repo@$repo_path@g" /opt/gogs/custom/conf/app.ini
sudo sed -i "s@yuno_url@$domain$path@g" /opt/gogs/custom/conf/app.ini
sudo sed -i "s/yuno_dbpdw/$db_pwd/g" /opt/gogs/custom/conf/app.ini
sudo sed -i "s/yuno_dbuser/$app/g" /opt/gogs/custom/conf/app.ini
sudo sed -i "s/yuno_domain/$domain/g" /opt/gogs/custom/conf/app.ini
sudo sed -i "s/yuno_key/$key/g" /opt/gogs/custom/conf/app.ini
sudo chown gogs:gogs /opt/gogs/custom/conf/app.ini

# Add ldap config
sudo service gogs restart # for building mysql table
sleep 30
mysql -u root -p$(sudo cat /etc/yunohost/mysql)  < ../conf/login_source.sql

# add admin user
curl --user $admin:$password http://localhost:6000 > /dev/null # create a user in the gogs database
mysql -u root -p$(sudo cat /etc/yunohost/mysql)  < ../conf/add_admin.sql

# Add Gogs to YunoHost's monitored services
sudo yunohost service add gogs --log /var/log/gogs.log

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf*
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

if [ "$is_public" = "Yes" ]
then
	sudo yunohost app setting gogs unprotected_uris -v "/"
fi

# Reload Nginx and regenerate SSOwat conf
sudo yunohost app ssowatconf
sudo service nginx reload

sudo service gogs restart

